/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AM;


import com.mysql.cj.xdevapi.Statement;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ANSHUL M
 */
public class PostTrip extends javax.swing.JFrame {

    /**
     * Creates new form PostTrip
     */
    
    /*
    insert into posts then into post.
    */
    int flag = 0;
    int flag3 = 0;
    int flag2 = 0;
    int this_user_id = global.user_id;
    int this_post_id ;
     PreparedStatement pst=null;
    Statement st=null;
    ResultSet rs=null;
    java.sql.Connection con=null;
    
        public void prequery(){
            
            
            System.out.print("connecting");
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Likes.class.getName()).log(Level.SEVERE, null, ex);
        }
            //java.sql.Connection con = null;
            try {
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/travelalong", "root", global.password);
            } catch (SQLException ex) {
                Logger.getLogger(com.sun.jdi.connect.spi.Connection.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    public PostTrip() throws SQLException {
       
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        
        
    }
    
    public int getRandom(int min, int max) {
    Random random = new Random();
    return random.nextInt(max - min) + min;
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dest_combo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tripdescp = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        date_choose_from = new com.toedter.calendar.JDateChooser();
        date_choose_to = new com.toedter.calendar.JDateChooser();
        number_of_p = new javax.swing.JFormattedTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Garamond", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Please Post Your Trip Details");

        jLabel2.setFont(new java.awt.Font("Garamond", 0, 18)); // NOI18N
        jLabel2.setText("Destination City");

        jLabel3.setFont(new java.awt.Font("Garamond", 0, 18)); // NOI18N
        jLabel3.setText("From Date");

        jLabel4.setFont(new java.awt.Font("Garamond", 0, 18)); // NOI18N
        jLabel4.setText("To Date");

        jLabel5.setFont(new java.awt.Font("Garamond", 0, 18)); // NOI18N
        jLabel5.setText("Number of People Accompanying You");

        jLabel6.setFont(new java.awt.Font("Garamond", 0, 18)); // NOI18N
        jLabel6.setText("Trip Description");

        dest_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mumbai", "Goa", "Delhi", "Jodhpur", "Mussoorie" }));

        tripdescp.setColumns(20);
        tripdescp.setRows(5);
        jScrollPane1.setViewportView(tripdescp);

        jButton1.setFont(new java.awt.Font("Garamond", 0, 24)); // NOI18N
        jButton1.setText("Post Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        date_choose_from.setAutoscrolls(true);

        number_of_p.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel2))
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(number_of_p, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(date_choose_to, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dest_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(date_choose_from, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(386, 386, 386)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(192, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dest_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(date_choose_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(date_choose_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(number_of_p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            // TODO add your handling code here:
    flag = 0;
    flag3= 0;
    long millis = System.currentTimeMillis(); 
        java.sql.Date date = new java.sql.Date(millis); 
       // System.out.println(date); 
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String date1 = sdf.format(date_choose_from.getDate());
    System.out.print(date1 + "\n");
    SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
    String date2 = sdf2.format(date_choose_to.getDate());
    System.out.print(date2 + "\n");
    String date3 = sdf2.format(date);
    
    if(number_of_p.getText().equals("") && flag == 0){
        JOptionPane.showMessageDialog(this,"All Field is required");
        number_of_p.requestFocus();
        flag = 1;
    }
    
  
 
    if(date_choose_to.getDate() == null && flag == 0){
         JOptionPane.showMessageDialog(this,"All Field is required");
         flag = 1;
         
         //txtemail.requestFocus();
    }
    if(date_choose_from.getDate() == null && flag == 0){
        JOptionPane.showMessageDialog(this,"All Field is required");
        flag = 1;
        
        //txtpassword.requestFocus();
        }
    if(tripdescp.getText().equals("") && flag == 0){
        JOptionPane.showMessageDialog(this,"All Field is required");
        tripdescp.requestFocus();
        flag = 1;
     }
    
    if(flag == 0 && ((date_choose_to.getDate().before(date_choose_from.getDate()))) ){
        JOptionPane.showMessageDialog(this,"The To Date must be after the From Date");
        //tripdescp.requestFocus();
        flag = 1;
        
    }
//    java.sql.Date datedat1 = new java.sql.Date(date_choose_from.getDate().getTime());
//    java.sql.Date datedat2 = new java.sql.Date(date_choose_to.getDate().getTime());
//    System.out.println(datedat1);
//    System.out.println(datedat2);
    if(flag == 0 && date1.equals(date2) ){
        JOptionPane.showMessageDialog(this,"The To Date cannot be equal to the From Date");
        //tripdescp.requestFocus();
        flag = 1;
        
    }
    //java.sql.Date datedat = new java.sql.Date(date_choose_from.getDate().getTime());
    if(flag == 0 && date1.equals(date3) && (date_choose_to.getDate().after(date)) ){
        //JOptionPane.showMessageDialog(this,"bkb");
        //tripdescp.requestFocus();
        flag3 = 1;
        
    }
    if(flag3 == 0 && flag == 0 && ((date_choose_to.getDate().before(date)) || (date_choose_from.getDate().before(date)))){
        //System.out.println(new java.sql.Date(date_choose_from.getDate().getTime()));
        //System.out.println(date);
        
        JOptionPane.showMessageDialog(this,"The Trip Dates must not be before today's date");
        //tripdescp.requestFocus();
        flag = 1;
        
    }
    if(flag == 0){    
   
        try {
            System.out.print("Yo\n");
            Class.forName("com.mysql.cj.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/travelalong","root",global.password);
           // st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
           
           // Check here if the post already exist
           
//            if(rs.next()){
////                JOptionPane.showMessageDialog(this,"Use Another Email ID");
////                txtemail.requestFocus();
                    // Ask the user to delete the already existing post if it already exists.
//            }
            
           //      try {
            //Class.forName("com.mysql.cj.jdbc.Driver");
            //con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel","root","Sudhir@123");
            pst=con.prepareStatement("INSERT INTO `travelalong`.`posts` (`User_ID`) VALUES (?);");
            pst.setInt(1,this_user_id);
            pst.executeUpdate();
            pst = con.prepareStatement("select post_id from travelalong.posts where user_id = ?;");
            pst.setInt(1,this_user_id);
            rs =  pst.executeQuery();
            if(rs.next()){
                this_post_id = rs.getInt("post_id");
                global.post_id = this_post_id;
            }
            pst=con.prepareStatement("INSERT INTO travelalong.post (`Post_ID`,`Destination`, `Date_from`, `Date_to`, `Number_of_people`, `description`) VALUES (?,?,?,?,?,?);");
            Integer rnd = getRandom(0,1000000);
            System.out.print(rnd + "\n");
            String rnds = rnd.toString();
            String temp = number_of_p.getText();
            
            int toin = Integer.parseInt(temp);
            System.out.print(toin + "\n");
            System.out.print(new java.sql.Date(date_choose_from.getDate().getTime()) + "\n");
            System.out.print(new java.sql.Date(date_choose_to.getDate().getTime()) + "\n");
            System.out.println(tripdescp.getText());
           // pst.setInt(1, rnd );
            pst.setInt(1,this_post_id);
            pst.setString(2, (String) dest_combo.getSelectedItem());
            pst.setDate(3, new java.sql.Date(date_choose_from.getDate().getTime()));
            pst.setDate(4, new java.sql.Date(date_choose_to.getDate().getTime()));
            pst.setInt(5,toin);
            pst.setString(6, tripdescp.getText());
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Your Trip Details have been Posted successfully");
            dispose();
           //new SignIn().setVisible(true);  
       // } catch (SQLException ex) {
            //Logger.getLogger(Record.class.getName()).log(Level.SEVERE, null, ex);
       // }
                
                
            
            
        } catch (Exception e) {
           Logger.getLogger(Record.class.getName()).log(Level.SEVERE, null, e);
           JOptionPane.showMessageDialog(this, "Kuch Gadbad hai Daya Enter krne mai !!");
        }
    }   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PostTrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PostTrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PostTrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PostTrip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PostTrip().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(PostTrip.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser date_choose_from;
    private com.toedter.calendar.JDateChooser date_choose_to;
    private javax.swing.JComboBox<String> dest_combo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField number_of_p;
    private javax.swing.JTextArea tripdescp;
    // End of variables declaration//GEN-END:variables
}
